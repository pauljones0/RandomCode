import matplotlib.pyplot as plt
from PIL import Image
from PIL.ExifTags import TAGS
import requests
from io import BytesIO

def display_info(image):
    '''
    Code from: https://github.com/x4nth055/pythoncode-tutorials/tree/master/ethical-hacking/image-metadata-extractor
    Tutorial folloed: https://www.geeksforgeeks.org/how-to-extract-image-metadata-in-python/
    '''
    info_dict={"Filename":image.filename,
                "Image Size":image.size,
                "Image Height":image.height,
                "Image Width":image.width,
                "Image Format":image.format,
                "Image Mode":image.mode,
                "Image is Animated": getattr(image, "is_animated", False),
                "Frames in Image":getattr(image, "n_frames", 1)
                }
    for label,value in info_dict.items():
        print(f"{label:25}: {value}")
    
    # extracting the exif metadata
    exifdata = image.getexif()
  
    # looping through all the tags present in exifdata
    for tagid in exifdata:
        
        # getting the tag name instead of tag id
        tagname = TAGS.get(tagid, tagid)
    
        # passing the tagid to get its respective value
        value = exifdata.get(tagid)
        
        # printing the final result
        print(f"{tagname:25}: {value}")
        
def display_img(image):
    '''
    If you try to use PIL img.show() function, windows photo viewer will crap out,
    saying that the 'temp file isn't available anymore'. To deal with this, I'm using
    matplotlib to display this. This works if you're working in jupyter.
    '''
    #image.show()
    
    #show image inline using matplotlib
    imgplot = plt.imshow(image)
    plt.axis('off')
    plt.show()
    
def get_input():
    #default dog photo below
    #url="https://images.pexels.com/photos/1108099/pexels-photo-1108099.jpeg"
    
    url=str(input("What online image do you want displayed?"))
    response = requests.get(url)
    
    return Image.open(BytesIO(response.content))

img = get_input()
display_img(img)
display_info(img)


